name: CI/CD Pipeline

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "LICENSE"
      - "*.md"
      - ".gitignore"

jobs:
  run:
    name: Jobs
    runs-on: ubuntu-latest
    steps:
      - name: 1. Fetch project files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 2. Install Snyk client
        uses: snyk/actions/setup@master

      - name: 3. Install Terraform client
        run: wget -q https://releases.hashicorp.com/terraform/1.3.2/terraform_1.3.2_linux_amd64.zip; unzip terraform_1.3.2_linux_amd64.zip; mv terraform /usr/local/bin; chmod +x /usr/local/bin/terraform; rm *.zip;

      - name: 4. Define Compile, Build & Test environment
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 5. Define changes notes
        run: echo "AKAMAI_PROPERTY_ACTIVATION_NOTES=\"$(git log -n 1 --pretty=format:'%s')\"" >> $GITHUB_ENV

      - name: 6. Compile & Build
        run: ./build.sh

      - name: 7. Unit & Integration Tests
        run: ./test.sh

      - name: 8. Code analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_URL: ${{ secrets.SONAR_URL }}
        run: ./codeAnalysis.sh

      - name: 9. Code quality gate
        uses: jkumar19/sonar-build-breaker@3.0.0
        with:
          sonar_branch: main
          project_key: ${{ secrets.SONAR_PROJECT_KEY }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_url: ${{ secrets.SONAR_URL }}

      - name: 10. IaC (Infrastructure as Code) analysis
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: ./iacAnalysis.sh

      - name: 11. Libraries analysis
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: ./librariesAnalysis.sh

      - name: 12. Packaging
        run: ./package.sh

      - name: 13. Packages analysis
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: ./packageAnalysis.sh

      - name: 14. Publishing
        env:
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        run: ./publish.sh

      - name: 15. Deploy in staging
        env:
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          LINODE_PUBLIC_KEY: ${{ secrets.LINODE_PUBLIC_KEY }}
          LINODE_PRIVATE_KEY: ${{ secrets.LINODE_PRIVATE_KEY }}
          AKAMAI_EDGEGRID_HOST: ${{ secrets.AKAMAI_EDGEGRID_HOST }}
          AKAMAI_EDGEGRID_ACCESS_TOKEN: ${{ secrets.AKAMAI_EDGEGRID_ACCESS_TOKEN }}
          AKAMAI_EDGEGRID_CLIENT_TOKEN: ${{ secrets.AKAMAI_EDGEGRID_CLIENT_TOKEN }}
          AKAMAI_EDGEGRID_CLIENT_SECRET: ${{ secrets.AKAMAI_EDGEGRID_CLIENT_SECRET }}
          AKAMAI_PROPERTY_ACTIVATION_NETWORK: staging
          AKAMAI_PROPERTY_ACTIVATION_NOTES: ${{ env.AKAMAI_PROPERTY_ACTIVATION_NOTES }}
        run: ./deploy.sh